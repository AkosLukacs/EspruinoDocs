class FetchResponse{constructor(e){this.res=e}text(){const e=this;return new Promise((function(t,n){let o,r="";function s(){clearTimeout(o),t(r)}e.res.on("data",(function(e){r+=e})),e.res.on("close",s),o=setTimeout((function(){e.res.removeListener("close",s),n("FetchRequest Timed-Out!")}),5e3)}))}json(){return this.text().then(JSON.parse)}}function useFetch(e){return e||(e=require("http")),function(t,n){const o=n||{},r=o.body||o.data;r&&(o.headers["Content-Length"]=r.length),delete o.body,delete o.data;const s=o.signal;s&&delete o.signal;const c=Object.assign(url.parse(t),o);return new Promise((function(t,n){if(s){s.on("abort",(function(){n("Fetch Error: REQUEST TIMEOUT.")}))}const o=e.request(c,(function(e){try{s&&s.removeAllListeners("abort"),t(new FetchResponse(e))}catch(e){n("Could Not Create FetchResponse Object: "+e)}}));o.on("error",(function(e){n("HTTP Error: "+e)})),o.end(r)}))}}exports=useFetch;
